<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std" docName="draft-crabbe-pce-pce-initiated-lsp-01" ipr="trust200902">
  <front>
    <title abbrev="Stateful PCE - PCE-initiated LSP">
    PCEP Extensions for PCE-initiated LSP Setup in a Stateful PCE Model</title>

    <author fullname="Edward Crabbe" initials="E." surname="Crabbe">
      <organization>Google, Inc.</organization>
      <address>
	<postal>
	  <street>1600 Amphitheatre Parkway</street>
	  <city>Mountain View</city>
	  <region>CA</region>
	  <code>94043</code>
	  <country>US</country>
	</postal>
	<email>edc@google.com</email>
      </address>
    </author>

	<author fullname="Ina Minei" initials="I." surname="Minei">
      <organization>Juniper Networks, Inc.</organization>
      <address>
	<postal>
	  <street>1194 N. Mathilda Ave.</street>
	  <city>Sunnyvale</city>
	  <region>CA</region>
	  <code>94089</code>
	  <country>US</country>
	</postal>
	<email>ina@juniper.net</email>
      </address>
    </author>
	
    <author fullname="Siva Sivabalan" initials="S." surname="Sivabalan">
      <organization>Cisco Systems, Inc.</organization>
      <address>
	<postal>
	  <street>170 West Tasman Dr.</street>
	  <city>San Jose</city>
	  <region>CA</region>
	  <code>95134</code>
	  <country>US</country>
	</postal>
	<email>msiva@cisco.com</email>
      </address>
    </author>

	<author fullname="Robert Varga" initials="R." surname="Varga">
      <organization>Pantheon Technologies SRO</organization>
      <address>
	<postal>
	  <street>Mlynske Nivy 56</street>
	  <city>Bratislava</city>
	  <code>821 05</code>
	  <country>Slovakia</country>
	</postal>
	<email>robert.varga@pantheon.sk</email>
      </address>
    </author>

    <date day="10" month="April" year="2013" />

    <workgroup>Network Working Group</workgroup>

    <abstract>
      <t>The Path Computation Element Communication Protocol (PCEP) provides
      mechanisms for Path Computation Elements (PCEs) to perform path
      computations in response to Path Computation Clients (PCCs) requests.</t>

      <t>The extensions described in <xref target='I-D.ietf-pce-stateful-pce'></xref> provide stateful control of Multiprotocol
      Label Switching (MPLS) Traffic Engineering Label Switched Paths (TE LSP) via PCEP, for a model where
	  the PCC delegates control over one or more locally configured LSPs to the PCE. This document describes
	  the creation and deletion of PCE-initiated LSPs under the stateful PCE model. </t>
      
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref target="RFC2119"/>.
      </t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t><xref target="RFC5440"/> describes the Path Computation Element
      Protocol PCEP.  PCEP defines the communication between a Path Computation
      Client (PCC) and a Path Control Element (PCE), or between PCE and PCE,
      enabling computation of Multiprotocol Label Switching (MPLS) for Traffic
      Engineering Label Switched Path (TE LSP) characteristics.
	  </t>

      <t><xref target='I-D.ietf-pce-stateful-pce'>Stateful pce</xref>  specifies a 
	  set of extensions to PCEP to enable stateful
      control of TE LSPs between and across PCEP sessions in compliance with
      <xref target="RFC4657"/>.  It includes mechanisms to effect LSP state
      synchronization between PCCs and PCEs, delegation of control of LSPs to
      PCEs, and PCE control of timing and sequence of path computations within
      and across PCEP sessions and focuses on a model where LSPs are configured on the PCC
	  and control over them is delegated to the PCE.
	  </t>
	  
	  <t> This document describes
	  the setup and teardown of PCE-initiated LSPs under the stateful PCE model, without the 
	  need for local configuration on the PCC, thus allowing for a dynamic network that is centrally 
	  controlled and deployed. 
	  </t>
    </section>

    <section title="Terminology">
      <t>This document uses the following terms defined in <xref
      target="RFC5440"/>: PCC, PCE, PCEP Peer.
	  </t>

      <t>This document uses the following terms defined in 
	  <xref target='I-D.ietf-pce-stateful-pce'></xref>: Stateful PCE, 
	  Delegation, Delegation Timeout Interval, LSP State Report, LSP 
	  Update Request.
	  </t>
      
	  <t>The following terms are defined in this document:

		 <list style="hanging">
		  
		  <t hangText="PCE-initiated LSP:"> LSP that is instantiated as a result of a request from the PCE.</t>
		  
		  <t hangText="LSP cleanup timer:"> PCE-defined timer for cleanup of PCE-initiated LSPs that are 
		  no longer delegated to a PCE.</t>
		  
		  
		 </list>
	  </t>
	  
      <t>The message formats in this document are specified using Routing
      Backus-Naur Format (RBNF) encoding as specified in <xref
      target="RFC5511"/>.
	  </t>
    </section>

     

    <section anchor="Overview" title="Architectural Overview">

     <section anchor="Motivation" title="Motivation">
	 <t><xref target='I-D.ietf-pce-stateful-pce'></xref> provides stateful control over LSPs 
	 that are locally configured on the PCC. This model relies on the LER taking an active role
	 in delegating locally configured LSPs to the PCE, and is well suited in environments where 
	 the LSP placement is fairly static. However, in environments where the LSP placement needs to change in response to
	 application demands, it is useful to support dynamic creation and  tear down of LSPs. 
	 The ability for a PCE to trigger the creation of LSPs on demand can make possible agile 
	 software-driven network operation, and can be seamlessly integrated into a controller-based network
	 architecture, where intelligence in the controller can determine when and where to set up paths. 
	 </t>
	 
	 <t>A possible use case is one of a software-driven network, where applications request 
	 network resources and paths from the network infrastructure. For example, an application can 
	 request a path with certain constraints between two LSRs by contacting the PCE. The PCE can 
	 compute a path satisfying the constraints, and instruct 
	 the head end LSR to create and signal it. When the path is no longer required by the application, 
	 the PCE can request its teardown.</t>
	 
	 <t> Another use case is that of demand engineering, where a PCE with visibility into both the network state and the
	demand matrix can anticipate and optimize how traffic is distributed across the infrastructure. Such optimizations may
	require creating new paths across the infrastructure. </t>

	 </section>
	 
	 <section anchor="Operation-overview" title="Operation overview">
	
		<t> A PCC indicates its ability to support PCE provisioned dynamic LSPs during the PCEP 
		Initialization Phase via a new flag in the STATEFUL-PCE-CAPABILITY TLV (see details in 
		<xref target="Capability-TLV"/>).
		</t>
	
		<t> The decision when to create a PCE-initiated LSP is out of the scope of this document. 
		To instantiate an LSP, the PCE sends a new message, the LSP Create Request (PCCreate) message to the PCC. The LSP 
		Create Request MUST include the END-POINTS and LSPA objects, and the LSPA object MUST include the 
		SYMBOLIC-PATH-NAME TLV. The PCC creates the LSP using the attributes communicated by the
		PCE, and local values for the unspecified parameters. It assigns 
		a unique LSP-ID for the LSP and automatically delegates the LSP to the PCE. It then generates 
		an LSP State Report (PCRpt) for the LSP, carrying the LSP-ID and the delegation bit. The PCE may
		update the attributes of the LSP via subsequent PCUpd messages.
		</t>
		
		<t>Subsequent LSP State Report and LSP Update Request for the LSP 
		will carry the PCC-assigned LSP-ID, which uniquely identifies the LSP. The LSPA Object included
		in these messages MUST carry the 
		SYMBOLIC-PATH-NAME TLV which will be used to correlate between the PCC-assigned LSP-ID and the LSP. 
		See details in <xref target="LSP-provisioning"/>.
		</t>
	
		<t> Removal of PCE-initiated LSPs is done by the PCE by setting the R flag in the LSP Object in the PCUpd message. 
		Upon receiving the PCUpd message with the R Flag set, the PCC deletes the LSP.  See details in
		 <xref target="LSP-provisioning"/>.
		 </t>
	
		<t> Once instantiated, a PCRpt is generated for the LSP, with the delegation bit set. After
		this, the delegation procedures for PCE-initiated LSPs are the same as for PCC initiated LSPs. 
		Upon session failure, PCE-initiated LSPs are not immediately removed, in order to avoid
		LSP flap and service interruption. However, to allow for network cleanup without manual intervention, 
		such "orphan" PCE-initiated LSPs must be either adopted by a 
		different PCE or cleaned up within a time interval. This time is negotiated between PCE and PCC at
		session initialization time. 
		See details in <xref target="Delegation-and-cleanup"/>.
		</t>

      </section>
	</section>
     
	<section anchor="Capability-negotiation" title="Support of PCE-initiated LSPs"> 
	 
	 <t>A PCC indicates its ability to support PCE provisioned dynamic LSPs during the PCEP Initialization 
	Phase.  The Open Object in the Open message contains the "Stateful PCE Capability" TLV, defined 
	in <xref target='I-D.ietf-pce-stateful-pce'></xref>.</t>
	<t>A new flag, the
	I (LSP-INSTANTIATION-CAPABILITY) flag is introduced to indicate support for instantiation of PCE-initiated LSPs.
	A PCE wishing to initiate LSPs, can do so only for PCCs that advertised this capability and a PCC will follow
	the procedures described in this document only on sessions where the PCE advertised the I flag. A PCE or PCC
	that advertise support of LSP initiation MUST also advertise a cleanup time for the removal of such LSPs. The 
	cleanup time is advertised
	via a new TLV in the Open Object, the LSP-CLEANUP TLV, discussed in  <xref target="Delegation-and-cleanup"/>, and 
	the value is negotiated to the lower one advertised on a session.</t>
	
       <section anchor="Capability-TLV" title="Stateful PCE Capability TLV">
	 
	 <t>The format of the STATEFUL-PCE-CAPABILITY TLV is shown in the
	 following figure:</t>

	 <figure anchor="Capability-TLV-Fmt" title="STATEFUL-PCE-CAPABILITY TLV format">
	   <artwork><![CDATA[
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |               Type=16         |            Length=4           |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |              Flags                                      |I|S|U|
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+
           ]]></artwork>
	 </figure>

	 <t>The type of the TLV is defined in <xref target='I-D.ietf-pce-stateful-pce'></xref> 
	 and it has a fixed length of 4 octets.</t>
	
	 <t>The value comprises a single field - Flags (32 bits). The U and S
	 bits are defined in <xref target='I-D.ietf-pce-stateful-pce'></xref>. </t>

	   <t hangText="I (LSP-INSTANTIATION-CAPABILITY - 1 bit):"> If set to 1 by a
	   PCC, the I Flag indicates that the PCC allows instantiation of an LSP
	   by a PCE. If set to 1 by a PCE, the I flag indicates that the PCE will
	   attempt to instantiate LSPs. The LSP-INSTANTIATION-CAPABILITY flag must be 
	   set by both PCC and PCE in order to support PCE-initiated LSP instantiation. 
	   </t> 

	 <t>Unassigned bits are considered reserved. They MUST be set to 0 on
	 transmission and MUST be ignored on receipt.
	 </t>
       </section>	   
	</section> 
		
    <section anchor="LSP-provisioning" title="PCE-initiated LSP creation">
	
	<t> To create a PCE-initiated LSP, a PCE sends a PCCreate message to a PCC, which 
	include a set of objects and TLVs describing the LSP to be instantiated.
	The message format, the objects and TLVs are discussed separately below. </t>
	
		<section anchor="PCCreate-message" title ="The LSP Create Message">
		
		<t>A Path Computation LSP Create message (also referred to as
		PCCreate message) is a PCEP message sent by a PCE to a PCC to trigger
		an LSP instantiation. The Message-Type field of the PCEP common header for the PCCreate
		message is set to [TBD].</t>
		
		<t> The PCCreate message MUST include the END-POINTS and the LSPA objects. In the LSPA object, it 
		MUST include the SYMBOLIC-PATH-NAME TLV for the LSP. The PCCreate message MAY include other 
		attributes for the LSP. If specified, the PCC MUST use them for the LSP instantiation, otherwise 
		it MUST use its locally configured values. The error messages will be specified in a future version 
		of this document. </t>

	<t>The format of a PCCreate message is as follows:</t>
	<figure>
	  <artwork><![CDATA[

   <PCCreate Message> ::= <Common Header>
                       <lsp-instantiation-list>
Where:

   <lsp-instantiation-list> ::= <lsp-instantiation-request>[<lsp-instantiation-list>]

   <lsp-instantiation-request> ::= <END-POINTS>
                                   <LSPA>
                                   [<ERO>]
                                   [<BANDWIDTH>]
                                   [<metric-list>]								   
 
								
Where:

   <metric-list>::=<METRIC>[<metric-list>]

	  ]]></artwork>
	</figure>
  
	   	<t> The END-POINTS Object contains the source and destination addresses for provisioning the PCE-initiated 
		LSP.  If the END-POINTS Object is missing, the PCC MUST send a PCErr message with Error-type=6 
		(Mandatory Object missing) and Error-value=3 (END-POINTS Object missing). </t>
		
		<t>The LSPA Object MUST include the SYMBOLIC-PATH-NAME TLV, which will be used to correlate between the 
		PCC-assigned LSP-ID and the LSP. 
		If the TLV is missing, the PCC MUST send a PCErr message with Error-type=6(Mandatory object missing) 
		and Error-value=14 (SYMBOLIC-PATH-NAME TLV missing). The symbolic name used for provisioning PCE-initiated LSPs must not 
		have conflict with the LSP name of any existing LSP in the PCC. (Existing LSPs may be either statically 
		configured, or initiated by another PCE).  If there is conflict with the LSP name, the PCC MUST send a 
		PCErr message with Error-type=23 (Bad Parameter value) and Error-value=1 (SYMBOLIC-PATH-NAME in use). The 
		only exception to this rule is for LSPs for which the LSP-cleanup timer is running
		(see <xref target="Delegation-and-cleanup"/>).</t>
		
		<t>PCE-initiated removal of a PCE-initiated LSP is done by setting the R (remove) flag in the LSP Object in the PCUpd 
		request from the PCE. The definition of the R bit is updated as follows:</t>

			<t> R (Remove - 1 bit):  On PCRpt messages the R Flag indicates that the LSP has been removed from the 
			PCC.  Upon receiving a PCRpt message with the R Flag set to 1, the PCE SHOULD remove all state related 
			to the LSP from its database.  In PCUpd messages the R flag indicates that the PCE wishes to disable 
			the LSP.  Upon receiving the PCUpd message with the R Flag set for a PCE-initiated
			LSP, the PCC tears down the LSP and removes its state. </t>
	
		<t>A PCC SHOULD be able to place a limit on either the 
		   number of LSPs or the percentage of resources that are allocated to honor PCE-initiated 
		   LSP requests. As soon as that limit is reached, the PCC MUST send a PCErr message 
		   of type 19 (Invalid Operation) and value TBD "PCE-initiated limit reached" 
		   and is free to drop any incoming PCCreate messages without additional processing.</t>
	
		<t> A PCC SHOULD relay to the PCE errors it encounters in the setup of PCE-initiated LSP. The 
			error codes and error processing will be detailed in a future version of this document. </t>
	</section>
	
		
		
	</section> 
	
    <section anchor="Delegation-and-cleanup" title="LSP delegation and cleanup">
	
		<section anchor="Delegation" title="LSP delegation procedures">
	
		<t>PCE-initiated LSPs are automatically delegated by the PCC to the PCE upon instantiation. 
		The PCC  MUST delegate the LSP to the PCE by  setting the delegation bit to 1 in the PCRpt that includes 
		the assigned LSP-Id.  All subsequent messages from the PCC must have the delegation bit set to 1. The PCC 
		cannot revoke the delegation for PCE-initiated LSPs for an active PCEP session. Sending a PCRpt message with 
		the delegation bit set to 0 results in a PCErr message  of type 19 (Invalid Operation) and value TBD 
		"Delegation for PCE-initiated LSP cannot be revoked".</t>
		
		<t> A PCE MAY return a delegation to the PCC, to allow for LSP transfer between PCEs. Doing so 
		MUST trigger the LSP cleanup timer described in  <xref target="Garbage-collection"/>.</t>
		
		<t> Control over PCE-initiated LSPs reverts to the PCC at the expiration of the delegation timeout. To obtain control 
		of a PCE-initiated LSP, a PCE (either the original or one of its backups) sends a PCCreate message 
		specifying the endpoints and symbolic name (the same process used  when initiating an LSP from the PCE). 
		See more in the next section. </t> 
		</section> 
		
		<section anchor="Garbage-collection" title="LSP cleanup procedures">

		<t>The LSP cleanup timer ensures that a PCE crash does not result in automatic and immediate disruption for the services 
		using PCE-initiated LSPs. PCE-initiated LSPs are not be removed immediately upon PCE failure. Instead, they are cleaned 
		up on the expiration of this timer. This allows for network cleanup without manual intervention. 
		The LSP cleanup timer is advertised in the session open message via a mandatory TLV for sessions 
		where PCE-initiated LSPs are supported. The timer is started upon PCEP session failure and is stopped when 
		the LSP is delegated to a PCE. Both PCE and PCC advertise a value for this timer, and the timer value is negotiated to the
		lower value of the two.</t> 
		
			<section anchor="LSP-CLEANUP-TLV" title="LSP-CLEANUP TLV">
	   
			   <t> The LSP-CLEANUP TLV is advertised in the Open Object and is 
			   mandatory when the I flag is set in the STATEFUL-PCE-CAPABILITY TLV. 
			   The LSP-CLEANUP TLV contains 
			   the time in seconds that the PCC has to wait before cleaning up any 
			   PCE-initiated LSPs belonging to a particular PCEP session when a PCEP session terminates.
			   Both PCE and PCC advertise a value for the cleanup time, and the cleanup timer is 
			   set to the lower of the two. 
			   The timer is triggered on PCEP session failure and reset when the LSP is delegated to a PCE.</t> 
			   
			   <t> Failure to include the mandatory LSP-CLEANUP TLV in the Open Object when the I flag is 
			   set MUST trigger PCErr of type 6 (Mandatory Object missing) and value 13 (LSP-CLEANUP TLV missing).</t> 
			   
			   <t>The format of the LSP-CLEANUP TLV is shown in the following figure:</t>

	 <figure anchor="LSP-cleanup-TLV-Fmt" title="LSP-CLEANUP TLV format">
	   <artwork><![CDATA[
	0                   1                   2                   3
	0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
	+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	|               Type=TBD         |            Length=4          |
	+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	|          LSP cleanup timeout value                            |
	+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+
		   ]]></artwork>
	 </figure>
			 
			 <t>The type of the TLV is TBD and it has a fixed length of 4 octets.</t>
			
			 <t>The value comprises a single field, the LSP cleanup timeout value. </t> 

			   <t hangText="LSP cleanup timeout value"> The time in seconds to wait before 
			   cleaning up PCE-initiated LSPs. Zero means immediate
			   removal. The value OXFFFFFFFF is reserved. </t>
			 
			<t> A PCE may take control of the dynamic LSPs for which the LSP cleanup timer is running by sending 
			an PCCreate request for the LSP. In this case, the "Bad Symbolic Path Name" error MUST NOT be generated, the 
			LSP MUST be delegated and the cleanup timer MUST be stopped. </t>

			</section> 
		</section>
	</section>
	
	<section anchor="IANA-considerations" title="IANA considerations">
	 <section anchor="PCEP-Msg-Codepoints" title="PCEP Messages">
       <t>This document defines the following new PCEP messages:</t>

       <texttable anchor="PCEP-New-Msg-CP" style="none" suppress-title="true">
	 <ttcol align="center" width='20%'>Value</ttcol>
	 <ttcol align="left" width='30%'>Meaning </ttcol>
	 <ttcol align="left" width='50%'>Reference </ttcol>
	 <c>12</c><c>&nbsp;Create</c><c>This document</c>
       </texttable>
     </section>
	
	<section anchor="PCEP-Error-Object" title="PCEP-Error Object">
       <t>This document defines new Error-Type and Error-Value for the following
       new error conditions:

       <vspace blankLines="1" /> 
       
       <?rfc subcompact="yes"?>
       <list style="hanging" hangIndent="13">

			<t hangText=" Error-Type">Meaning</t>
				<t hangText="    6">Mandatory Object missing
				 <list style="hanging" hangIndent="17">
				   <t hangText=" Error-value=13:">LSP cleanup TLV missing</t>
				   <t hangText=" Error-value=14:">SYMBOLIC-PATH-NAME TLV missing</t>
				 </list>
				</t>
				
				 <t hangText="    19">Invalid operation
				 <list style="hanging" hangIndent="17">
				   <t hangText=" Error-value=3:"> PCE-initiated LSP limit reached</t>
				   <t hangText=" Error-value=4:"> Delegation for PCE-initiated LSP cannot be revoked</t>
				 </list>
				 </t>
				 
				<t hangText="    23">Bad parameter value
				 <list style="hanging" hangIndent="17">
				   <t hangText=" Error-value=1:">SYMBOLIC-PATH-NAME in use</t>
				 </list>
				 </t>
				 
			   </list>

		   </t>
     </section>
	 
	 <section anchor="PCEP-TLV-Type-Indicators" title="PCEP TLV Type Indicators">
       <t>This document defines the following new PCEP TLVs:</t>

       <texttable anchor="PCEP-New-TLV-CP" style="none" suppress-title="true">
	 <ttcol align="center" width='20%'>Value</ttcol>
	 <ttcol align="left" width='40%'>Meaning </ttcol>
	 <ttcol align="left" width='40%'>Reference </ttcol>
 	 <c>26</c><c>&nbsp;LSP cleanup</c><c>This document</c>
       </texttable>
     </section>
	</section> 
	
   <section anchor="Security" title="Security Considerations">
     
	 <t> The security considerations described in <xref target='I-D.ietf-pce-stateful-pce'></xref> 
	 apply to the extensions described in this document. Additional considerations
	 related to a malicious PCE are introduced. </t>

     <section anchor="Malicious-PCE" title="Malicious PCE">
       <t> The LSP instantiation mechanism described in this document allows a PCE to 
	   generate state on the PCC and throughout the network. As a result, it
       introduces a new attack vector: an attacker may flood the PCC with LSP
	   instantiation requests and consume network and LSR resources, either by spoofing messages or
       by compromising the PCE itself.</t>

       <t>A PCC can protect itself from such an attack by imposing a limit on either the 
	   number of LSPs or the percentage of resources that are allocated to honor PCE-initiated 
	   LSP requests. As soon as that limit is reached, the PCC MUST send a PCErr message 
	   of type 19 (Invalid Operation) and value 3 "PCE-initiated LSP limit reached" 
	   and is free to drop any incoming PCCreate messages without additional processing.</t>
	   
	   <t> Rapid flaps triggered by the PCE can also be an attack vector. This will be discussed 
	   in a future version of this document.</t>
     </section>

   </section>

   <section anchor="Acknowledgements" title="Acknowledgements">
     <t>We would like to thank Jan Medved, Ambrose Kwong and Raveendra Trovi for
     their contributions to this document.</t>
    </section>
	
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2205.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.3209.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4090.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5088.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5089.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5440.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml"?>
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5511.xml"?>
    	<?rfc include="reference.I-D.ietf-pce-stateful-pce"?>
   </references>

   <references title="Informative References">
     <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2702.xml"?>
     <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.3031.xml"?>
     <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.3346.xml"?>
     <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.3630.xml"?>
     <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4655.xml"?>
     <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4657.xml"?>
     <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5305.xml"?>
     <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5394.xml"?>
     <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5557.xml"?>
   </references>
  </back>
</rfc>
